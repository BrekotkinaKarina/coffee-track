version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    hostname: rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./order_service:/app
    command: >
      sh -c "uvicorn order_service.app.api:app
      --host 0.0.0.0
      --port 8000
      --reload"

  consumer:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
      - PYTHONUNBUFFERED=1
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./order_service:/app
    command: python -m order_service.app.consumer

volumes:
  redis_data:
  rabbitmq_data: